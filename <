#include "main.h"

int main(void)
{
    char path[200];
    printf ("enter the path of the map : ");
    fgets(path, 200, stdin);
   
    path[strlen(path) - 1] = 0; 
    FILE *f = fopen(path, "rb");
    size_t size = 0;
    char *source = NULL;
    if (f == NULL)
    {
	printf ("This file do not exist\nEnter c if you want to create it : ");
	if ('c' != getchar())
	    return 0;
    }
    else
    {
        fseek(f, 0, SEEK_END);
        size = ftell(f);
        fseek(f, 0, SEEK_SET);  /* same as rewind(f); */
        source = malloc(size + 1);
        fread(source, 1, size, f);
        fclose(f);
        source[size] = 0;
    }

    size_t i = 0;
    int x = 0;
    int y = 0;
    while (i < size && source[i] != '\n')
	i++;
    x = (i - 1) / 3 + 1;
    y = size / (3 * x);

    int j = 0;
    int k = 0;
    char *map = malloc(x * y);

    printf("%d %d\n", x,y );

    while (k < x * y)
    {
	if (strncmp(&source[j], "ea1", 3) == 0)
	    map[k] = 0;
	else if (strncmp(&source[j], "ea2", 3) == 0)
	    map[k] = 1;
	else if (strncmp(&source[j], "ea3", 3) == 0)
            map[k] = 2;
	else if (strncmp(&source[j], "te1", 3) == 0)
	    map[k] = 3;
	else if (strncmp(&source[j], "te2", 3) == 0)
	    map[k] = 4;
	else if (strncmp(&source[j], "te3", 3) == 0)
	    map[k] = 5;
	else if (strncmp(&source[j], "he1", 3) == 0)
	    map[k] = 6;
	else if (strncmp(&source[j], "he2", 3) == 0)
            map[k] = 7;
	else if (strncmp(&source[j], "he3", 3) == 0)
            map[k] = 8;
	else if (strncmp(&source[j], "he4", 3) == 0)
            map[k] = 9;
	else if (strncmp(&source[j], "he5", 3) == 0)
	    map[k] = 10;
	else if (strncmp(&source[j], "sa1", 3) == 0)
	    map[k] = 11;
	else if (strncmp(&source[j], "sa2", 3) == 0)
            map[k] = 12;
	else if (strncmp(&source[j], "sa3", 3) == 0)
            map[k] = 13;
	else if (strncmp(&source[j], "bl1", 3) == 0)
            map[k] = 14;
	else if (strncmp(&source[j], "bl2", 3) == 0)
            map[k] = 15;
	else if (strncmp(&source[j], "bl3", 3) == 0)
            map[k] = 16;
	else if (strncmp(&source[j], "ne1", 3) == 0)
            map[k] = 17;
	else if (strncmp(&source[j], "ne2", 3) == 0)
            map[k] = 18;
	else if (strncmp(&source[j], "ne3", 3) == 0)
            map[k] = 19;
	else if (strncmp(&source[j], "gr1", 3) == 0)
            map[k] = 20;
	else if (strncmp(&source[j], "gr2", 3) == 0)
            map[k] = 21;
	else if (source[j] == '\n')
	{
	    j -= 2;
	    k -= 1;
	}
	else
	{
	    printf ("error while loading map\n");
	    exit(0);
	}
	k += 1;
	j +=3;
	
    }

    SDL_Init(SDL_INIT_VIDEO);
    window = SDL_CreateWindow("Empire Expense",
            SDL_WINDOWPOS_UNDEFINED,
            SDL_WINDOWPOS_UNDEFINED,
            1200,700,
            SDL_WINDOW_OPENGL);
    renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED);
    textures = init_textures();
    
    int posx = 0;
    char left = 0;
    int posy = 0;
    int sel = 0;
    int selcontent = 0;
    int lastsel = 0;
    char lastselcontent = map[0];
    map[0] = 25;
    SDL_Rect position;
    position.x = 0;
    position.y = 0;
    while (1 == 1)
    {
	SDL_RenderClear(renderer);
	k = 0;
        while (k < y)
        {
	    j = 0;
	    position.y = k * 25 - posy + 350;
	    while (j < x)
	    {
	        position.x = j * 25 - posx + 600;
	        j++;
	        SDL_Texture *t = select_texture(map[j + k * x]);
		if (map[j + k * x] < 0 || map[j + k * x] > 23)
		    printf  ("%d\n", map[j + k * x]);
	        SDL_QueryTexture(t, NULL, NULL, &position.w, &position.h);
	        SDL_RenderCopy(renderer, t, NULL, &position);
	    }
    	    k++;
        }
        position.x = 1150;
	position.y = 0;
	position.h = 325;
	position.w = 50;
	SDL_RenderCopy(renderer, textures->menu_textures, NULL, &position);
	SDL_RenderPresent(renderer);
	SDL_Event event;
        SDL_PollEvent(&event);
       //SDL_WaitEvent(&event);
       if (event.type == SDL_KEYDOWN)
       {
            if ((event.key.keysym.sym == SDLK_d || event.key.keysym.sym == SDLK_RIGHT) && event.key.repeat == 0)
		sel += 1;
            if ((event.key.keysym.sym == SDLK_s || event.key.keysym.sym == SDLK_DOWN) && event.key.repeat == 0)
                sel += x;
            if ((event.key.keysym.sym == SDLK_q || event.key.keysym.sym == SDLK_LEFT) && event.key.repeat == 0)
                sel -= 1;
            if ((event.key.keysym.sym == SDLK_z || event.key.keysym.sym == SDLK_UP) && event.key.repeat == 0)
                sel -= x;
        }
        if (event.type ==  SDL_MOUSEBUTTONUP)
	{
	    if (event.button.button == SDL_BUTTON_LEFT)
	    {
		left = 0;
	    }
	}
        if (event.type ==  SDL_MOUSEBUTTONDOWN)
        {
            if (event.button.button == SDL_BUTTON_LEFT && left == 0)
            {
		left = 1;
		if (event.motion.x > 1175)
		{
		    if (event.motion.y < 25)
			selcontent = 0;
		    else if (event.motion.y < 50)
			selcontent = 2;
		    else if (event.motion.y < 75)
			selcontent = 15;
		    else if (event.motion.y < 100)
			selcontent = 20;
		    else if (event.motion.y < 125)
			selcontent = 7;
		    else if (event.motion.y < 150)
			selcontent = 9;
		    else if (event.motion.y < 175)
			selcontent = 17;
		    else if (event.motion.y < 200)
			selcontent = 19;
		    else if (event.motion.y < 225)
			selcontent = 12;
		    else if (event.motion.y < 250)
			selcontent = 3;
		    else if (event.motion.y < 275)
			selcontent = 5;
		    else if (event.motion.y < 300)
		    {
			map = moins_colonne(map, x, y);
			x--;
		    }
		    else if (event.motion.y < 325)
		    {
			map = realloc(map, x * y - y);
			y--;
		    }
		}
		else if (event.motion.x > 1150)
		{
		    if (event.motion.y < 25)
			selcontent = 6;
		    else if (event.motion.y < 50)
			selcontent = 1;
		    else if (event.motion.y < 75)
			selcontent = 14;
		    else if (event.motion.y < 100)
			selcontent = 16;
		    else if (event.motion.y < 125)
			selcontent = 21;
		    else if (event.motion.y < 150)
			selcontent = 8;
		    else if (event.motion.y < 175)
			selcontent = 10;
		    else if (event.motion.y < 200)
			selcontent = 18;
		    else if (event.motion.y < 225)
			selcontent = 11;
		    else if (event.motion.y < 250)
			selcontent = 13;
		    else if (event.motion.y < 275)
			selcontent = 4;
		    else if (event.motion.y < 300)
		    {
			map = plus_colonne(map, x, y);
			x++;
		    }
		    else if (event.motion.y < 325)
		    {
			map = realloc(map, x * y + y);
			y++;
		    }
		}
	    }
	    if (event.button.button == SDL_BUTTON_MIDDLE)
		lastselcontent = selcontent;
        }
        if (event.type == SDL_QUIT)
        {
            SDL_Quit();
            exit(0);
        }
        if (sel > x * y)
	    sel = 0;
        if (sel < 0)
	    sel = x * y;
       
        posx = (sel % x) * 25;
        posy = (sel / x) * 25;

        if (sel != lastsel)
	{
	    map[lastsel] = lastselcontent;
	    lastsel = sel;
	    lastselcontent = map[sel];
	    map[sel] = selcontent;
	}
	if (selcontent > 22)
	    selcontent = 0;

    }
}

char *plus_colonne(char *map, int x, int y)
{
    char *newmap = calloc(y * x + x, 0);
    for (int j = 0; j < y; j++)
        for (int i = 0; i < x; i++)
            newmap[j * (x + 1) + i] = map[j * x + i];
    free(map);
    return newmap;
}

char *moins_colonne(char *map, int x, int y)
{
    char *newmap = malloc((y - 1) * x);
    for (int i = 0; i < x - 1; i++)
        for (int j = 0; j < y; j++)
            newmap[j * (x - 1) + i] = map[j * x + i];
    free(map);
    return newmap;
}
